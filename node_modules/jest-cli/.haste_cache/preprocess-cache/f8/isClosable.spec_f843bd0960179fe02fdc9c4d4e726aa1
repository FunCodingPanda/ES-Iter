'use strict'; // istanbul ignore next
function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}require('../auto_mock_off');require('babel/polyfill');var _srcItertools = require(
'../src/itertools');

describe('isClosable', function () {
    it('Returns true if Iterator implements return method', function () {// istanbul ignore next
        var _iter;var iter = (_iter = {}, _defineProperty(_iter, 
        Symbol.iterator, function () {
            return this;}), _defineProperty(_iter, 'next', 

        function next() {}), _defineProperty(_iter, 'return', 
        function _return() {}), _iter);

        expect((0, _srcItertools.isClosable)(iter)).toBe(true);});});