'use strict';Object.defineProperty(exports, '__esModule', { value: true }); // istanbul ignore next
var _slicedToArray = (function () {function sliceIterator(arr, i) {var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i['return']) _i['return']();} finally {if (_d) throw _e;}}return _arr;}return function (arr, i) {if (Array.isArray(arr)) {return arr;} else if (Symbol.iterator in Object(arr)) {return sliceIterator(arr, i);} else {throw new TypeError('Invalid attempt to destructure non-iterable instance');}};})();exports.getIterator = getIterator;exports.iterFrom = iterFrom;exports.isIterable = isIterable;exports.isMultiIterable = isMultiIterable;exports.isIterator = isIterator;exports.isClosable = isClosable;exports.closeIterator = closeIterator;exports.closeAllIterators = closeAllIterators;exports.toArray = toArray;exports.range = range;exports.zip = zip;exports.longestZip = longestZip;exports.count = count;exports.cycle = cycle;exports.repeat = repeat;exports.enumerate = enumerate;exports.chain = chain;exports.groupBy = groupBy;exports.map = map;exports.longestMap = longestMap;exports.spreadMap = spreadMap;exports.compress = compress;exports.take = take;exports.drop = drop;exports.dropWhile = dropWhile;exports.takeWhile = takeWhile;exports.filter = filter;exports.filterFalse = filterFalse;exports.accumulate = accumulate;exports.product = product;exports.permutations = permutations;exports.combinations = combinations;var marked0$0 = [





























































range, 
























zip, 






















longestZip, 

























count, 








cycle, 

















repeat, 












enumerate, 



chain, 





groupBy, 














map, 





longestMap, 





spreadMap, 





compress, 





take, 











drop, 










dropWhile, 










takeWhile, 










filter, 







filterFalse, 







accumulate, 

















product, 

















permutations, 























combinations].map(regeneratorRuntime.mark); // istanbul ignore next
function _toConsumableArray(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];return arr2;} else {return Array.from(arr);}} // istanbul ignore next
function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function toInteger(n) {if (n < 0) {return Math.ceil(n);}return Math.floor(n);}function toPositiveInteger(n) {if (n < 0) {return 0;}return Math.floor(n);}function getIterator(obj) {return obj[Symbol.iterator]();}function iterFrom(gen) {for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}return _defineProperty({}, Symbol.iterator, function () {return gen.apply(undefined, args);});}function isIterable(obj) {return obj != null && typeof obj[Symbol.iterator] == 'function';}function isMultiIterable(obj) {return isIterable(obj) && getIterator(obj) !== obj;}function isIterator(obj) {return isIterable(obj) && typeof obj.next == 'function';}function isClosable(iterator) {return isIterable(iterator) && typeof iterator['return'] == 'function';}function closeIterator(iterator) {if (isClosable(iterator)) {return iterator['return']().done;}return false;}function closeAllIterators() {var _iteratorNormalCompletion = true;var _didIteratorError = false;var _iteratorError = undefined;try {for (var _len2 = arguments.length, iterators = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {iterators[_key2] = arguments[_key2];}for (var _iterator = iterators[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {var it = _step.value;closeIterator(it);}} catch (err) {_didIteratorError = true;_iteratorError = err;} finally {try {if (!_iteratorNormalCompletion && _iterator['return']) {_iterator['return']();}} finally {if (_didIteratorError) {throw _iteratorError;}}}}function toArray() {var res = [];var _iteratorNormalCompletion2 = true;var _didIteratorError2 = false;var _iteratorError2 = undefined;try {for (var _len3 = arguments.length, iterables = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {iterables[_key3] = arguments[_key3];}for (var _iterator2 = iterables[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {var it = _step2.value;res.push.apply(res, _toConsumableArray(it));}} catch (err) {_didIteratorError2 = true;_iteratorError2 = err;} finally {try {if (!_iteratorNormalCompletion2 && _iterator2['return']) {_iterator2['return']();}} finally {if (_didIteratorError2) {throw _iteratorError2;}}}return res;}function range(start, end, step) {var s, e, k;return regeneratorRuntime.wrap(function range$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:s = toInteger(start), e = toInteger(end);if (typeof end == 'undefined') {e = s;s = 0;}k = toInteger(step) || (s < e ? 1 : -1);if (!(k > 0)) {context$1$0.next = 12;break;}case 4:if (!(s < e)) {context$1$0.next = 10;break;}context$1$0.next = 7;return s;case 7:s += k;context$1$0.next = 4;break;case 10:context$1$0.next = 18;break;case 12:if (!(s > e)) {context$1$0.next = 18;break;}context$1$0.next = 15;return s;case 15:s += k;context$1$0.next = 12;break;case 18:case 'end':return context$1$0.stop();}}, marked0$0[0], this);}function zip() {for (var _len4 = arguments.length, iterables = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {iterables[_key4] = arguments[_key4];}var iterators, res, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, it, curr, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, i;return regeneratorRuntime.wrap(function zip$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:iterators = iterables.map(getIterator);context$1$0.prev = 1;case 2:if (!true) {context$1$0.next = 55;break;}res = [];_iteratorNormalCompletion3 = true;_didIteratorError3 = false;_iteratorError3 = undefined;context$1$0.prev = 7;_iterator3 = iterators[Symbol.iterator]();case 9:if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {context$1$0.next = 37;break;}it = _step3.value;curr = it.next();if (!curr.done) {context$1$0.next = 33;break;}_iteratorNormalCompletion4 = true;_didIteratorError4 = false;_iteratorError4 = undefined;context$1$0.prev = 16;for (_iterator4 = iterators[Symbol.iterator](); !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {i = _step4.value;if (i !== it) closeIterator(i);}context$1$0.next = 24;break;case 20:context$1$0.prev = 20;context$1$0.t0 = context$1$0['catch'](16);_didIteratorError4 = true;_iteratorError4 = context$1$0.t0;case 24:context$1$0.prev = 24;context$1$0.prev = 25;if (!_iteratorNormalCompletion4 && _iterator4['return']) {_iterator4['return']();}case 27:context$1$0.prev = 27;if (!_didIteratorError4) {context$1$0.next = 30;break;}throw _iteratorError4;case 30:return context$1$0.finish(27);case 31:return context$1$0.finish(24);case 32:return context$1$0.abrupt('return');case 33:res.push(curr.value);case 34:_iteratorNormalCompletion3 = true;context$1$0.next = 9;break;case 37:context$1$0.next = 43;break;case 39:context$1$0.prev = 39;context$1$0.t1 = context$1$0['catch'](7);_didIteratorError3 = true;_iteratorError3 = context$1$0.t1;case 43:context$1$0.prev = 43;context$1$0.prev = 44;if (!_iteratorNormalCompletion3 && _iterator3['return']) {_iterator3['return']();}case 46:context$1$0.prev = 46;if (!_didIteratorError3) {context$1$0.next = 49;break;}throw _iteratorError3;case 49:return context$1$0.finish(46);case 50:return context$1$0.finish(43);case 51:context$1$0.next = 53;return res;case 53:context$1$0.next = 2;break;case 55:context$1$0.prev = 55;closeAllIterators.apply(undefined, _toConsumableArray(iterators));return context$1$0.finish(55);case 58:case 'end':return context$1$0.stop();}}, marked0$0[1], this, [[1,, 55, 58], [7, 39, 43, 51], [16, 20, 24, 32], [25,, 27, 31], [44,, 46, 50]]);}function longestZip() {for (var _len5 = arguments.length, iterables = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {iterables[_key5] = arguments[_key5];}var iterators, map, count, res, _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, it, curr;return regeneratorRuntime.wrap(function longestZip$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:iterators = iterables.map(getIterator), map = new Map(zip(iterators, repeat(false))), count = 0;context$1$0.prev = 1;case 2:if (!true) {context$1$0.next = 29;break;}res = [];_iteratorNormalCompletion5 = true;_didIteratorError5 = false;_iteratorError5 = undefined;context$1$0.prev = 7;for (_iterator5 = iterators[Symbol.iterator](); !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {it = _step5.value;curr = it.next();if (curr.done && !map.get(it)) {map.set(it, true);count++;}res.push(curr.value);}context$1$0.next = 15;break;case 11:context$1$0.prev = 11;context$1$0.t0 = context$1$0['catch'](7);_didIteratorError5 = true;_iteratorError5 = context$1$0.t0;case 15:context$1$0.prev = 15;context$1$0.prev = 16;if (!_iteratorNormalCompletion5 && _iterator5['return']) {_iterator5['return']();}case 18:context$1$0.prev = 18;if (!_didIteratorError5) {context$1$0.next = 21;break;}throw _iteratorError5;case 21:return context$1$0.finish(18);case 22:return context$1$0.finish(15);case 23:if (!(count >= iterators.length)) {context$1$0.next = 25;break;}return context$1$0.abrupt('return');case 25:context$1$0.next = 27;return res;case 27:context$1$0.next = 2;break;case 29:context$1$0.prev = 29;closeAllIterators.apply(undefined, _toConsumableArray(iterators));return context$1$0.finish(29);case 32:case 'end':return context$1$0.stop();}}, marked0$0[2], this, [[1,, 29, 32], [7, 11, 15, 23], [16,, 18, 22]]);}function count(start, step) {var s, k;return regeneratorRuntime.wrap(function count$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:s = toInteger(start) || 0, k = toInteger(step) || 1;case 1:if (!true) {context$1$0.next = 7;break;}context$1$0.next = 4;return s;case 4:s += k;context$1$0.next = 1;break;case 7:case 'end':return context$1$0.stop();}}, marked0$0[3], this);}function cycle(iterable) {var arr, _iteratorNormalCompletion6, _didIteratorError6, _iteratorError6, _iterator6, _step6, v;return regeneratorRuntime.wrap(function cycle$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:if (!isMultiIterable(iterable)) {context$1$0.next = 7;break;}case 1:if (!true) {context$1$0.next = 5;break;}return context$1$0.delegateYield(iterable, 't0', 3);case 3:context$1$0.next = 1;break;case 5:context$1$0.next = 39;break;case 7:arr = [];_iteratorNormalCompletion6 = true;_didIteratorError6 = false;_iteratorError6 = undefined;context$1$0.prev = 11;_iterator6 = iterable[Symbol.iterator]();case 13:if (_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done) {context$1$0.next = 21;break;}v = _step6.value;context$1$0.next = 17;return v;case 17:arr.push(v);case 18:_iteratorNormalCompletion6 = true;context$1$0.next = 13;break;case 21:context$1$0.next = 27;break;case 23:context$1$0.prev = 23;context$1$0.t1 = context$1$0['catch'](11);_didIteratorError6 = true;_iteratorError6 = context$1$0.t1;case 27:context$1$0.prev = 27;context$1$0.prev = 28;if (!_iteratorNormalCompletion6 && _iterator6['return']) {_iterator6['return']();}case 30:context$1$0.prev = 30;if (!_didIteratorError6) {context$1$0.next = 33;break;}throw _iteratorError6;case 33:return context$1$0.finish(30);case 34:return context$1$0.finish(27);case 35:if (!true) {context$1$0.next = 39;break;}return context$1$0.delegateYield(arr, 't2', 37);case 37:context$1$0.next = 35;break;case 39:case 'end':return context$1$0.stop();}}, marked0$0[4], this, [[11, 23, 27, 35], [28,, 30, 34]]);}function repeat(val, times) {var _iteratorNormalCompletion7, _didIteratorError7, _iteratorError7, _iterator7, _step7, i;return regeneratorRuntime.wrap(function repeat$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:if (!(typeof times == 'undefined')) {context$1$0.next = 8;break;}case 1:if (!true) {context$1$0.next = 6;break;}context$1$0.next = 4;return val;case 4:context$1$0.next = 1;break;case 6:context$1$0.next = 34;break;case 8:_iteratorNormalCompletion7 = true;_didIteratorError7 = false;_iteratorError7 = undefined;context$1$0.prev = 11;_iterator7 = range(times)[Symbol.iterator]();case 13:if (_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done) {context$1$0.next = 20;break;}i = _step7.value;context$1$0.next = 17;return val;case 17:_iteratorNormalCompletion7 = true;context$1$0.next = 13;break;case 20:context$1$0.next = 26;break;case 22:context$1$0.prev = 22;context$1$0.t0 = context$1$0['catch'](11);_didIteratorError7 = true;_iteratorError7 = context$1$0.t0;case 26:context$1$0.prev = 26;context$1$0.prev = 27;if (!_iteratorNormalCompletion7 && _iterator7['return']) {_iterator7['return']();}case 29:context$1$0.prev = 29;if (!_didIteratorError7) {context$1$0.next = 32;break;}throw _iteratorError7;case 32:return context$1$0.finish(29);case 33:return context$1$0.finish(26);case 34:case 'end':return context$1$0.stop();}}, marked0$0[5], this, [[11, 22, 26, 34], [27,, 29, 33]]);}function enumerate(iterable, start) {return regeneratorRuntime.wrap(function enumerate$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:return context$1$0.delegateYield(zip(count(start), iterable), 't0', 1);case 1:case 'end':return context$1$0.stop();}}, marked0$0[6], this);}function chain() {var _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _len6, iterables, _key6, _iterator8, _step8, it, args$1$0 = arguments;return regeneratorRuntime.wrap(function chain$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:_iteratorNormalCompletion8 = true;_didIteratorError8 = false;_iteratorError8 = undefined;context$1$0.prev = 3;for (_len6 = args$1$0.length, iterables = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {iterables[_key6] = args$1$0[_key6];}_iterator8 = iterables[Symbol.iterator]();case 6:if (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {context$1$0.next = 12;break;}it = _step8.value;return context$1$0.delegateYield(it, 't0', 9);case 9:_iteratorNormalCompletion8 = true;context$1$0.next = 6;break;case 12:context$1$0.next = 18;break;case 14:context$1$0.prev = 14;context$1$0.t1 = context$1$0['catch'](3);_didIteratorError8 = true;_iteratorError8 = context$1$0.t1;case 18:context$1$0.prev = 18;context$1$0.prev = 19;if (!_iteratorNormalCompletion8 && _iterator8['return']) {_iterator8['return']();}case 21:context$1$0.prev = 21;if (!_didIteratorError8) {context$1$0.next = 24;break;}throw _iteratorError8;case 24:return context$1$0.finish(21);case 25:return context$1$0.finish(18);case 26:case 'end':return context$1$0.stop();}}, marked0$0[7], this, [[3, 14, 18, 26], [19,, 21, 25]]);}function groupBy(iterable) {var key = arguments.length <= 1 || arguments[1] === undefined ? function (x) {return x;} : arguments[1];var k, arr, _iteratorNormalCompletion9, _didIteratorError9, _iteratorError9, _iterator9, _step9, val, res;return regeneratorRuntime.wrap(function groupBy$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:k = {}, arr = [];_iteratorNormalCompletion9 = true;_didIteratorError9 = false;_iteratorError9 = undefined;context$1$0.prev = 4;_iterator9 = iterable[Symbol.iterator]();case 6:if (_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done) {context$1$0.next = 19;break;}exports.val = val = _step9.value;res = key(val);if (!(res !== k)) {context$1$0.next = 15;break;}if (!arr.length) {context$1$0.next = 13;break;}context$1$0.next = 13;return [arr[0], arr];case 13:k = res;arr = [];case 15:arr.push(val);case 16:_iteratorNormalCompletion9 = true;context$1$0.next = 6;break;case 19:context$1$0.next = 25;break;case 21:context$1$0.prev = 21;context$1$0.t0 = context$1$0['catch'](4);_didIteratorError9 = true;_iteratorError9 = context$1$0.t0;case 25:context$1$0.prev = 25;context$1$0.prev = 26;if (!_iteratorNormalCompletion9 && _iterator9['return']) {_iterator9['return']();}case 28:context$1$0.prev = 28;if (!_didIteratorError9) {context$1$0.next = 31;break;}throw _iteratorError9;case 31:return context$1$0.finish(28);case 32:return context$1$0.finish(25);case 33:context$1$0.next = 35;return [arr[0], arr];case 35:case 'end':return context$1$0.stop();}}, marked0$0[8], this, [[4, 21, 25, 33], [26,, 28, 32]]);}function map(callback) {var _iteratorNormalCompletion10, _didIteratorError10, _iteratorError10, _len7, iterables, _key7, _iterator10, _step10, arr, args$1$0 = arguments;return regeneratorRuntime.wrap(function map$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:_iteratorNormalCompletion10 = true;_didIteratorError10 = false;_iteratorError10 = undefined;context$1$0.prev = 3;for (_len7 = args$1$0.length, iterables = Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {iterables[_key7 - 1] = args$1$0[_key7];}_iterator10 = zip.apply(undefined, iterables)[Symbol.iterator]();case 6:if (_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done) {context$1$0.next = 13;break;}arr = _step10.value;context$1$0.next = 10;return callback.apply(undefined, _toConsumableArray(arr));case 10:_iteratorNormalCompletion10 = true;context$1$0.next = 6;break;case 13:context$1$0.next = 19;break;case 15:context$1$0.prev = 15;context$1$0.t0 = context$1$0['catch'](3);_didIteratorError10 = true;_iteratorError10 = context$1$0.t0;case 19:context$1$0.prev = 19;context$1$0.prev = 20;if (!_iteratorNormalCompletion10 && _iterator10['return']) {_iterator10['return']();}case 22:context$1$0.prev = 22;if (!_didIteratorError10) {context$1$0.next = 25;break;}throw _iteratorError10;case 25:return context$1$0.finish(22);case 26:return context$1$0.finish(19);case 27:case 'end':return context$1$0.stop();}}, marked0$0[9], this, [[3, 15, 19, 27], [20,, 22, 26]]);}function longestMap(callback) {var _iteratorNormalCompletion11, _didIteratorError11, _iteratorError11, _len8, iterables, _key8, _iterator11, _step11, arr, args$1$0 = arguments;return regeneratorRuntime.wrap(function longestMap$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:_iteratorNormalCompletion11 = true;_didIteratorError11 = false;_iteratorError11 = undefined;context$1$0.prev = 3;for (_len8 = args$1$0.length, iterables = Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {iterables[_key8 - 1] = args$1$0[_key8];}_iterator11 = longestZip.apply(undefined, iterables)[Symbol.iterator]();case 6:if (_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done) {context$1$0.next = 13;break;}arr = _step11.value;context$1$0.next = 10;return callback.apply(undefined, _toConsumableArray(arr));case 10:_iteratorNormalCompletion11 = true;context$1$0.next = 6;break;case 13:context$1$0.next = 19;break;case 15:context$1$0.prev = 15;context$1$0.t0 = context$1$0['catch'](3);_didIteratorError11 = true;_iteratorError11 = context$1$0.t0;case 19:context$1$0.prev = 19;context$1$0.prev = 20;if (!_iteratorNormalCompletion11 && _iterator11['return']) {_iterator11['return']();}case 22:context$1$0.prev = 22;if (!_didIteratorError11) {context$1$0.next = 25;break;}throw _iteratorError11;case 25:return context$1$0.finish(22);case 26:return context$1$0.finish(19);case 27:case 'end':return context$1$0.stop();}}, marked0$0[10], this, [[3, 15, 19, 27], [20,, 22, 26]]);}function spreadMap(callback, iterable) {var _iteratorNormalCompletion12, _didIteratorError12, _iteratorError12, _iterator12, _step12, arr;return regeneratorRuntime.wrap(function spreadMap$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:_iteratorNormalCompletion12 = true;_didIteratorError12 = false;_iteratorError12 = undefined;context$1$0.prev = 3;_iterator12 = iterable[Symbol.iterator]();case 5:if (_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done) {context$1$0.next = 12;break;}arr = _step12.value;context$1$0.next = 9;return callback.apply(undefined, _toConsumableArray(arr));case 9:_iteratorNormalCompletion12 = true;context$1$0.next = 5;break;case 12:context$1$0.next = 18;break;case 14:context$1$0.prev = 14;context$1$0.t0 = context$1$0['catch'](3);_didIteratorError12 = true;_iteratorError12 = context$1$0.t0;case 18:context$1$0.prev = 18;context$1$0.prev = 19;if (!_iteratorNormalCompletion12 && _iterator12['return']) {_iterator12['return']();}case 21:context$1$0.prev = 21;if (!_didIteratorError12) {context$1$0.next = 24;break;}throw _iteratorError12;case 24:return context$1$0.finish(21);case 25:return context$1$0.finish(18);case 26:case 'end':return context$1$0.stop();}}, marked0$0[11], this, [[3, 14, 18, 26], [19,, 21, 25]]);}function compress(data, selectors) {var _iteratorNormalCompletion13, _didIteratorError13, _iteratorError13, _iterator13, _step13, _step13$value, v, s;return regeneratorRuntime.wrap(function compress$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:_iteratorNormalCompletion13 = true;_didIteratorError13 = false;_iteratorError13 = undefined;context$1$0.prev = 3;_iterator13 = zip(data, selectors)[Symbol.iterator]();case 5:if (_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done) {context$1$0.next = 15;break;}_step13$value = _slicedToArray(_step13.value, 2);v = _step13$value[0];s = _step13$value[1];if (!s) {context$1$0.next = 12;break;}context$1$0.next = 12;return v;case 12:_iteratorNormalCompletion13 = true;context$1$0.next = 5;break;case 15:context$1$0.next = 21;break;case 17:context$1$0.prev = 17;context$1$0.t0 = context$1$0['catch'](3);_didIteratorError13 = true;_iteratorError13 = context$1$0.t0;case 21:context$1$0.prev = 21;context$1$0.prev = 22;if (!_iteratorNormalCompletion13 && _iterator13['return']) {_iterator13['return']();}case 24:context$1$0.prev = 24;if (!_didIteratorError13) {context$1$0.next = 27;break;}throw _iteratorError13;case 27:return context$1$0.finish(24);case 28:return context$1$0.finish(21);case 29:case 'end':return context$1$0.stop();}}, marked0$0[12], this, [[3, 17, 21, 29], [22,, 24, 28]]);}function take(n, iterable) {var count, _iteratorNormalCompletion14, _didIteratorError14, _iteratorError14, _iterator14, _step14, v;return regeneratorRuntime.wrap(function take$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:count = toPositiveInteger(n);_iteratorNormalCompletion14 = true;_didIteratorError14 = false;_iteratorError14 = undefined;context$1$0.prev = 4;_iterator14 = iterable[Symbol.iterator]();case 6:if (_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done) {context$1$0.next = 16;break;}v = _step14.value;if (!(count-- > 0)) {context$1$0.next = 12;break;}context$1$0.next = 11;return v;case 11:return context$1$0.abrupt('continue', 13);case 12:return context$1$0.abrupt('break', 16);case 13:_iteratorNormalCompletion14 = true;context$1$0.next = 6;break;case 16:context$1$0.next = 22;break;case 18:context$1$0.prev = 18;context$1$0.t0 = context$1$0['catch'](4);_didIteratorError14 = true;_iteratorError14 = context$1$0.t0;case 22:context$1$0.prev = 22;context$1$0.prev = 23;if (!_iteratorNormalCompletion14 && _iterator14['return']) {_iterator14['return']();}case 25:context$1$0.prev = 25;if (!_didIteratorError14) {context$1$0.next = 28;break;}throw _iteratorError14;case 28:return context$1$0.finish(25);case 29:return context$1$0.finish(22);case 30:case 'end':return context$1$0.stop();}}, marked0$0[13], this, [[4, 18, 22, 30], [23,, 25, 29]]);}function drop(n, iterable) {var count, _iteratorNormalCompletion15, _didIteratorError15, _iteratorError15, _iterator15, _step15, v;return regeneratorRuntime.wrap(function drop$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:count = toPositiveInteger(n);_iteratorNormalCompletion15 = true;_didIteratorError15 = false;_iteratorError15 = undefined;context$1$0.prev = 4;_iterator15 = iterable[Symbol.iterator]();case 6:if (_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done) {context$1$0.next = 15;break;}v = _step15.value;if (!(count-- > 0)) {context$1$0.next = 10;break;}return context$1$0.abrupt('continue', 12);case 10:context$1$0.next = 12;return v;case 12:_iteratorNormalCompletion15 = true;context$1$0.next = 6;break;case 15:context$1$0.next = 21;break;case 17:context$1$0.prev = 17;context$1$0.t0 = context$1$0['catch'](4);_didIteratorError15 = true;_iteratorError15 = context$1$0.t0;case 21:context$1$0.prev = 21;context$1$0.prev = 22;if (!_iteratorNormalCompletion15 && _iterator15['return']) {_iterator15['return']();}case 24:context$1$0.prev = 24;if (!_didIteratorError15) {context$1$0.next = 27;break;}throw _iteratorError15;case 27:return context$1$0.finish(24);case 28:return context$1$0.finish(21);case 29:case 'end':return context$1$0.stop();}}, marked0$0[14], this, [[4, 17, 21, 29], [22,, 24, 28]]);}function dropWhile(callback, iterable) {var iter, _iteratorNormalCompletion16, _didIteratorError16, _iteratorError16, _iterator16, _step16, v;return regeneratorRuntime.wrap(function dropWhile$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:iter = getIterator(iterable);_iteratorNormalCompletion16 = true;_didIteratorError16 = false;_iteratorError16 = undefined;context$1$0.prev = 4;_iterator16 = iter[Symbol.iterator]();case 6:if (_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done) {context$1$0.next = 16;break;}v = _step16.value;if (callback(v)) {context$1$0.next = 13;break;}context$1$0.next = 11;return v;case 11:return context$1$0.delegateYield(iter, 't0', 12);case 12:return context$1$0.abrupt('break', 16);case 13:_iteratorNormalCompletion16 = true;context$1$0.next = 6;break;case 16:context$1$0.next = 22;break;case 18:context$1$0.prev = 18;context$1$0.t1 = context$1$0['catch'](4);_didIteratorError16 = true;_iteratorError16 = context$1$0.t1;case 22:context$1$0.prev = 22;context$1$0.prev = 23;if (!_iteratorNormalCompletion16 && _iterator16['return']) {_iterator16['return']();}case 25:context$1$0.prev = 25;if (!_didIteratorError16) {context$1$0.next = 28;break;}throw _iteratorError16;case 28:return context$1$0.finish(25);case 29:return context$1$0.finish(22);case 30:case 'end':return context$1$0.stop();}}, marked0$0[15], this, [[4, 18, 22, 30], [23,, 25, 29]]);}function takeWhile(callback, iterable) {var _iteratorNormalCompletion17, _didIteratorError17, _iteratorError17, _iterator17, _step17, v;return regeneratorRuntime.wrap(function takeWhile$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:_iteratorNormalCompletion17 = true;_didIteratorError17 = false;_iteratorError17 = undefined;context$1$0.prev = 3;_iterator17 = iterable[Symbol.iterator]();case 5:if (_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done) {context$1$0.next = 16;break;}v = _step17.value;if (!callback(v)) {context$1$0.next = 12;break;}context$1$0.next = 10;return v;case 10:context$1$0.next = 13;break;case 12:return context$1$0.abrupt('break', 16);case 13:_iteratorNormalCompletion17 = true;context$1$0.next = 5;break;case 16:context$1$0.next = 22;break;case 18:context$1$0.prev = 18;context$1$0.t0 = context$1$0['catch'](3);_didIteratorError17 = true;_iteratorError17 = context$1$0.t0;case 22:context$1$0.prev = 22;context$1$0.prev = 23;if (!_iteratorNormalCompletion17 && _iterator17['return']) {_iterator17['return']();}case 25:context$1$0.prev = 25;if (!_didIteratorError17) {context$1$0.next = 28;break;}throw _iteratorError17;case 28:return context$1$0.finish(25);case 29:return context$1$0.finish(22);case 30:case 'end':return context$1$0.stop();}}, marked0$0[16], this, [[3, 18, 22, 30], [23,, 25, 29]]);}function filter(callback, iterable) {if (callback === undefined) callback = Boolean;var _iteratorNormalCompletion18, _didIteratorError18, _iteratorError18, _iterator18, _step18, v;return regeneratorRuntime.wrap(function filter$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:_iteratorNormalCompletion18 = true;_didIteratorError18 = false;_iteratorError18 = undefined;context$1$0.prev = 3;_iterator18 = iterable[Symbol.iterator]();case 5:if (_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done) {context$1$0.next = 13;break;}v = _step18.value;if (!callback(v)) {context$1$0.next = 10;break;}context$1$0.next = 10;return v;case 10:_iteratorNormalCompletion18 = true;context$1$0.next = 5;break;case 13:context$1$0.next = 19;break;case 15:context$1$0.prev = 15;context$1$0.t0 = context$1$0['catch'](3);_didIteratorError18 = true;_iteratorError18 = context$1$0.t0;case 19:context$1$0.prev = 19;context$1$0.prev = 20;if (!_iteratorNormalCompletion18 && _iterator18['return']) {_iterator18['return']();}case 22:context$1$0.prev = 22;if (!_didIteratorError18) {context$1$0.next = 25;break;}throw _iteratorError18;case 25:return context$1$0.finish(22);case 26:return context$1$0.finish(19);case 27:case 'end':return context$1$0.stop();}}, marked0$0[17], this, [[3, 15, 19, 27], [20,, 22, 26]]);}function filterFalse(callback, iterable) {if (callback === undefined) callback = Boolean;var _iteratorNormalCompletion19, _didIteratorError19, _iteratorError19, _iterator19, _step19, v;return regeneratorRuntime.wrap(function filterFalse$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:_iteratorNormalCompletion19 = true;_didIteratorError19 = false;_iteratorError19 = undefined;context$1$0.prev = 3;_iterator19 = iterable[Symbol.iterator]();case 5:if (_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done) {context$1$0.next = 13;break;}v = _step19.value;if (callback(v)) {context$1$0.next = 10;break;}context$1$0.next = 10;return v;case 10:_iteratorNormalCompletion19 = true;context$1$0.next = 5;break;case 13:context$1$0.next = 19;break;case 15:context$1$0.prev = 15;context$1$0.t0 = context$1$0['catch'](3);_didIteratorError19 = true;_iteratorError19 = context$1$0.t0;case 19:context$1$0.prev = 19;context$1$0.prev = 20;if (!_iteratorNormalCompletion19 && _iterator19['return']) {_iterator19['return']();}case 22:context$1$0.prev = 22;if (!_didIteratorError19) {context$1$0.next = 25;break;}throw _iteratorError19;case 25:return context$1$0.finish(22);case 26:return context$1$0.finish(19);case 27:case 'end':return context$1$0.stop();}}, marked0$0[18], this, [[3, 15, 19, 27], [20,, 22, 26]]);}function accumulate(iterable) {var callback = arguments.length <= 1 || arguments[1] === undefined ? function (x, y) {return x + y;} : arguments[1];var it, next, acc;return regeneratorRuntime.wrap(function accumulate$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:it = getIterator(iterable);context$1$0.prev = 1;next = it.next(), acc = next.value;if (next.done) {context$1$0.next = 6;break;}context$1$0.next = 6;return acc;case 6:if ((next = it.next()).done) {context$1$0.next = 12;break;}acc = callback(acc, next.value);context$1$0.next = 10;return acc;case 10:context$1$0.next = 6;break;case 12:context$1$0.prev = 12;closeIterator(it);return context$1$0.finish(12);case 15:case 'end':return context$1$0.stop();}}, marked0$0[19], this, [[1,, 12, 15]]);}function product() {for (var _len9 = arguments.length, iterables = Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {iterables[_key9] = arguments[_key9];}var marked1$0, arr, len, res, gen;return regeneratorRuntime.wrap(function product$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:gen = function gen() {var idx = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];var _iteratorNormalCompletion20, _didIteratorError20, _iteratorError20, _iterator20, _step20, v;return regeneratorRuntime.wrap(function gen$(context$2$0) {while (1) switch (context$2$0.prev = context$2$0.next) {case 0:if (!(idx >= len)) {context$2$0.next = 4;break;}context$2$0.next = 3;return res;case 3:return context$2$0.abrupt('return');case 4:_iteratorNormalCompletion20 = true;_didIteratorError20 = false;_iteratorError20 = undefined;context$2$0.prev = 7;_iterator20 = arr[idx][Symbol.iterator]();case 9:if (_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done) {context$2$0.next = 16;break;}v = _step20.value;res[idx] = v;return context$2$0.delegateYield(gen(idx + 1), 't0', 13);case 13:_iteratorNormalCompletion20 = true;context$2$0.next = 9;break;case 16:context$2$0.next = 22;break;case 18:context$2$0.prev = 18;context$2$0.t1 = context$2$0['catch'](7);_didIteratorError20 = true;_iteratorError20 = context$2$0.t1;case 22:context$2$0.prev = 22;context$2$0.prev = 23;if (!_iteratorNormalCompletion20 && _iterator20['return']) {_iterator20['return']();}case 25:context$2$0.prev = 25;if (!_didIteratorError20) {context$2$0.next = 28;break;}throw _iteratorError20;case 28:return context$2$0.finish(25);case 29:return context$2$0.finish(22);case 30:case 'end':return context$2$0.stop();}}, marked1$0[0], this, [[7, 18, 22, 30], [23,, 25, 29]]);};marked1$0 = [gen].map(regeneratorRuntime.mark);arr = iterables.map(function (it) {return isMultiIterable(it) ? it : toArray(it);}), len = arr.length, res = [];return context$1$0.delegateYield(gen(), 't0', 4);case 4:case 'end':return context$1$0.stop();}}, marked0$0[20], this);}function permutations(iterable, r) {var marked1$0, arr, map, len, res, gen;return regeneratorRuntime.wrap(function permutations$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:gen = function gen() {var idx = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];var _iteratorNormalCompletion21, _didIteratorError21, _iteratorError21, _iterator21, _step21, _step21$value, i, v;return regeneratorRuntime.wrap(function gen$(context$2$0) {while (1) switch (context$2$0.prev = context$2$0.next) {case 0:if (!(idx >= len)) {context$2$0.next = 4;break;}context$2$0.next = 3;return res;case 3:return context$2$0.abrupt('return');case 4:_iteratorNormalCompletion21 = true;_didIteratorError21 = false;_iteratorError21 = undefined;context$2$0.prev = 7;_iterator21 = enumerate(arr)[Symbol.iterator]();case 9:if (_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done) {context$2$0.next = 21;break;}_step21$value = _slicedToArray(_step21.value, 2);i = _step21$value[0];v = _step21$value[1];if (map.has(i)) {context$2$0.next = 18;break;}map.set(i, true);res[idx] = v;return context$2$0.delegateYield(gen(idx + 1), 't0', 17);case 17:map['delete'](i);case 18:_iteratorNormalCompletion21 = true;context$2$0.next = 9;break;case 21:context$2$0.next = 27;break;case 23:context$2$0.prev = 23;context$2$0.t1 = context$2$0['catch'](7);_didIteratorError21 = true;_iteratorError21 = context$2$0.t1;case 27:context$2$0.prev = 27;context$2$0.prev = 28;if (!_iteratorNormalCompletion21 && _iterator21['return']) {_iterator21['return']();}case 30:context$2$0.prev = 30;if (!_didIteratorError21) {context$2$0.next = 33;break;}throw _iteratorError21;case 33:return context$2$0.finish(30);case 34:return context$2$0.finish(27);case 35:case 'end':return context$2$0.stop();}}, marked1$0[0], this, [[7, 23, 27, 35], [28,, 30, 34]]);};marked1$0 = [gen].map(regeneratorRuntime.mark);arr = toArray(iterable), map = new Map(), len = Math.min(toPositiveInteger(r) || arr.length, arr.length), res = [];return context$1$0.delegateYield(gen(), 't0', 4);case 4:case 'end':return context$1$0.stop();}}, marked0$0[21], this);}function combinations(iterable, r) {var marked1$0, arr, len, 
    res, 

    gen;return regeneratorRuntime.wrap(function combinations$(context$1$0) {while (1) switch (context$1$0.prev = context$1$0.next) {case 0:gen = function gen() {var idx = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];var start = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];var 




                    i, l;return regeneratorRuntime.wrap(function gen$(context$2$0) {while (1) switch (context$2$0.prev = context$2$0.next) {case 0:if (!(idx >= len)) {context$2$0.next = 4;break;}context$2$0.next = 3;return res;case 3:return context$2$0.abrupt('return');case 4:i = start, l = arr.length;case 5:if (!(i < l)) {context$2$0.next = 11;break;}
                                res[idx] = arr[i];return context$2$0.delegateYield(
                                gen(idx + 1, i + 1), 't0', 8);case 8:i++;context$2$0.next = 5;break;case 11:case 'end':return context$2$0.stop();}}, marked1$0[0], this);};marked1$0 = [gen].map(regeneratorRuntime.mark);arr = toArray(iterable), len = Math.min(toPositiveInteger(r), arr.length), res = [];return context$1$0.delegateYield(



                gen(), 't0', 4);case 4:case 'end':return context$1$0.stop();}}, marked0$0[22], this);}