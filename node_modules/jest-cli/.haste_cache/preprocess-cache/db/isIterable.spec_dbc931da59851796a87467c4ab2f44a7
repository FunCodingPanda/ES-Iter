'use strict';require('../auto_mock_off');require(
'babel/polyfill');var _srcItertools = require(
'../src/itertools');

describe('isIterable', function () {
    it('Returns true if object is iterable', function () {
        expect((0, _srcItertools.isIterable)([1, 2, 3])).toBe(true);
        expect((0, _srcItertools.isIterable)('Test')).toBe(true);
        expect((0, _srcItertools.isIterable)(new Map())).toBe(true);
        expect((0, _srcItertools.isIterable)(new Set())).toBe(true);});


    it('Returns true if object is iterator', function () {
        expect((0, _srcItertools.isIterable)([][Symbol.iterator]())).toBe(true);
        expect((0, _srcItertools.isIterable)(''[Symbol.iterator]())).toBe(true);
        expect((0, _srcItertools.isIterable)(new Map()[Symbol.iterator]())).toBe(true);
        expect((0, _srcItertools.isIterable)(new Set()[Symbol.iterator]())).toBe(true);});


    it('Returns false if object is not iterable', function () {
        expect((0, _srcItertools.isIterable)(Object.create(null))).toBe(false);});});